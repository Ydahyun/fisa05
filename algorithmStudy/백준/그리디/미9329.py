# 백준 9329번
# <문제> 패스트 푸드 상금: 문제 설명
"""
ACM-ICPC 아시아 지역 대회기간 중 대전의 패스트 푸드 음식점들은 그들의 음식점을 홍보하기 위해 이벤트를 준비한다. 
특정 음식을 먹을 때 마다 스티커를 하나 제공하는데 스티커를 모으면 상금으로 교환할 수 있다. 
같은 종류의 스티커가 필요한 상금은 여러 번 교환할 수 있으며, 같은 종류의 스티커를 가진 서로 다른 액수의 상금은 존재하지 않는다. 
상금 교환에 필요없는 스티커도 있다.

지역대회를 보러 가면서, 당신의 코치가 패스트 푸드 음식점에서만 식사를 하도록 허락했을 때, 얼마나 많은 상금을 획득할 수 있을까?
"""

# 입력
"""
입력은 여러개의 테스트 케이스로 이루어져있다. 
각 테스트 케이스마다 첫째 줄에는 서로 다른 상금의 종류 n (1 ≤ n ≤ 10) 과 
코치가 가지고 있는 스티커의 종류 (1 ≤ m ≤ 30, 종류는 1부터 m까지 번호가 매겨진다) 가 주어진다. 
다음 n개의 줄은 상금에 관한 정보가 주어지는데 각 줄마다 첫 번째 정수는 해당 상금에 필요한 스티커의 개수 k (1 ≤ k ≤ m) 가 주어지며 
뒤이어 k개의 정수에는 해당 상금에 필요한 스티커의 종류가 주어지며 마지막으로 상금의 액수가 주어진다 (최대 1,000,000) . 
n개의 모든 입력이 주어진 후 마지막 줄은 코치가 가지고 있는 1부터 m까지 스티커의 개수가 각각 주어진다.
 각각의 스티커의 개수는 100개 이하이다.

3
2 10
3 1 2 3 100
4 4 5 6 7 200
2 3 1 4 5 2 2 1 3 4
3 6
2 1 2 100
3 3 4 5 200
1 6 300
1 2 3 4 5 6
3 6
2 1 2 100
3 3 4 5 200
1 6 300
1 2 0 4 5 6
 
"""

# 출력
"""
각각의 케이스마다 최대 상금의 액수를 한줄씩 출력한다.
"""

# 내 풀이 아이디어
"""
문제 이해 못함..

상금 액수가 높은 것부터 해치워야함(그리디 알고리즘)
와 어렵다. 이래서 구현문제가 구현하기 빡세다는거구나
머리 속으로는 뭔 말 알. but 구현할라니까 빡세다 ㅋㅋ
인풋먼저 어떻게 받아야하는지 모루게써 ㄷㄷ
그래도 일단 한 번 해봐

"""
case_cnt = int(input())
for _ in range(case_cnt):
    n, m = map(int, input().split())
    prize_list = []
    for _ in range(n):
        tmp = list(map(int, input().split()))
        k = tmp[0]  # 필요한 스티커 종류 수
        sticker_types = tmp[1:k+1]  # k개의 스티커 번호 (1-based)
        amount = tmp[-1]  # 상금 금액
        prize_list.append((sticker_types, amount))
    sticker_have = list(map(int, input().split()))  # 각 스티커의 개수 (index 0이 1번 스티커)
    
    total = 0
    for sticker_types, amount in prize_list:
        # 각 상금별로 필요한 스티커 중에서 가진 개수의 최소값이 곧 최대 교환 횟수
        min_exchange = min(sticker_have[sticker_type-1] for sticker_type in sticker_types)
        total += min_exchange * amount
    print(total)





# Discussion
"""
..나중에 이해하도록하자..
"""